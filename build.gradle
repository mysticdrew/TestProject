buildscript {
    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }

    dependencies {
        classpath 'org.jetbrains.kotlin:kotlin-gradle-plugin:1.6.10'
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'org.jetbrains.kotlin.jvm'
    apply plugin: 'kotlin'

    sourceSets {
        main.kotlin.srcDirs = ['src/main/java', 'src/main/kotlin']
    }
    sourceSets.main.resources { srcDir 'src/generated/resources' }

    java.toolchain.languageVersion = JavaLanguageVersion.of(17)

    jar {
        dependsOn 'processDocs'
        manifest {
            attributes([
                    "Specification-Title"     : project.name,
                    "Specification-Vendor"    : project.group_id,
                    "Specification-Version"   : "1", // We are version 1 of ourselves
                    "Implementation-Title"    : project.name,
                    "Implementation-Version"  : "${version}",
                    "Implementation-Vendor"   : project.group_id,
                    "Implementation-Timestamp": getDate()
            ])
        }
    }

    repositories {

        mavenCentral()

        maven {
            name = 'Sponge / Mixin'
            url = 'https://repo.spongepowered.org/repository/maven-public/'
        }
        maven {
            name = "JourneyMap (Public)"
            url = "https://jm.gserv.me/repository/maven-public/"
        }
        maven {
            url "https://www.cursemaven.com"
        }

        maven {
            name = 'BlameJared Maven (CrT / Bookshelf)'
            url = 'https://maven.blamejared.com'
        }
    }

    dependencies {

        //external libs
        implementation group: 'javax.servlet', name: 'javax.servlet-api', version: '4.0.1'
        implementation group: 'org.jetbrains.kotlin', name: 'kotlin-stdlib', version: '1.6.10'
        implementation group: 'com.sparkjava', name: 'spark-kotlin', version: '1.0.0-alpha'

        // for annotations
        implementation group: 'com.google.code.findbugs', name: 'jsr305', version: '3.0.1'

        testImplementation 'junit:junit:4.12'
        testImplementation 'org.mockito:mockito-inline:4.10.+'

    }


    tasks.withType(JavaCompile).configureEach {
        it.options.encoding = 'UTF-8'
        it.options.release = 17
    }

    compileKotlin {
        inputs.file "../gradle.properties"
        kotlinOptions {
            jvmTarget = "17"
            freeCompilerArgs += "-Xopt-in=kotlin.RequiresOptIn"
        }
    }

    // Disables Gradle's custom module metadata from being published to maven. The
    // metadata includes mapped dependencies which are not reasonably consumable by
    // other mod developers.
    tasks.withType(GenerateModuleMetadata) {
        enabled = false
    }
}


def getDate() {
    def date = new Date()
    def formattedDate = date.format(project.dateFormat)
    return formattedDate
}
