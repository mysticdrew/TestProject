buildscript {
    repositories {
        mavenCentral()

        maven {
            name = "forge"
            url = "https://maven.minecraftforge.net"
        }
        maven {
            url = 'https://maven.parchmentmc.org'
        }
        maven {
            url "https://plugins.gradle.org/m2/"
        }
        maven {
            url = 'https://repo.spongepowered.org/maven'
        }
    }

    dependencies {
        classpath 'gradle.plugin.com.github.johnrengelman:shadow:7.1.2'
        classpath 'org.parchmentmc:librarian:1.+'
        classpath group: 'com.modrinth.minotaur', name: 'Minotaur', version: '2.+'
    }
}

plugins {
    id 'java'
    id 'org.spongepowered.gradle.vanilla' version '0.2.1-SNAPSHOT'
}

apply plugin: 'com.github.johnrengelman.shadow'

version = "${project.minecraft_version}-${project.jm_major}.${project.jm_minor}.${project.jm_micro}${project.jm_patch}"
def modVersion = "${project.jm_major}.${project.jm_minor}.${project.jm_micro}${project.jm_patch}"

group = project.group_id
archivesBaseName = project.mod_id

configurations {
    shade
}

minecraft {
    version(minecraft_version)
    accessWideners(project.file("src/main/resources/journeymap.accesswidener"))
}

dependencies {
    implementation 'org.jetbrains:annotations:20.1.0'
    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'
    compileOnly group: 'org.spongepowered', name: 'mixin', version: '0.8.5'

    //external libs
    implementation group: 'javax.servlet', name: 'javax.servlet-api', version: '4.0.1'
    implementation group: 'org.jetbrains.kotlin', name: 'kotlin-stdlib', version: '1.6.10'
    implementation group: 'com.sparkjava', name: 'spark-kotlin', version: '1.0.0-alpha'
    implementation group: 'io.github.earcut4j', name: 'earcut4j', version: '2.2.2'


    //external libs shade
    shade group: 'javax.servlet', name: 'javax.servlet-api', version: '4.0.1'
    shade group: 'org.jetbrains.kotlin', name: 'kotlin-stdlib', version: '1.5.21'
    shade group: 'com.sparkjava', name: 'spark-kotlin', version: '1.0.0-alpha'
    shade group: 'io.github.earcut4j', name: 'earcut4j', version: '2.2.2'
}

shadowJar {
    archiveName = "${baseName}-${version}.${extension}"
    configurations = [project.configurations.shade]
    classifier = "shadow"
    duplicatesStrategy = DuplicatesStrategy.INCLUDE


    dependencies {
        exclude("META-INF/maven/**")
        exclude("META-INF/services/**")
        exclude("fabric-**")
    }

    minimize {
        // API has utility classes that must be included
        exclude(dependency("info.journeymap:.*:.*"))
    }

    relocate "ar.com", "info.journeymap.shaded.ar.com"
    relocate "com.sparkjava", "info.journeymap.shaded.com.sparkjava"
    relocate "javax.servlet", "info.journeymap.shaded.org.javax.servlet"
    relocate "org.intellij", "info.journeymap.shaded.org.intellij"
    relocate "org.jetbrains", "info.journeymap.shaded.org.jetbrains"
    relocate "org.slf4j", "info.journeymap.shaded.org.slf4j"
    relocate "org.eclipse", "info.journeymap.shaded.org.eclipse"
    relocate "earcut4j", "info.journeymap.shaded.earcut4j"

    relocate "kotlin", "info.journeymap.shaded.kotlin.kotlin"
    relocate "spark", "info.journeymap.shaded.kotlin.spark"

    exclude 'dummyThing'
    exclude 'LICENSE.txt'
}

task processDocs(type: Copy) {
    // update docs
    from(file("/doc/")) {
        include '*.html'
        expand 'version': project.version,
                'date': getDate(),
                'mcversion': project.minecraft_version,
                'loaderversion': project.forge_version,
                'apiversion': project.journeymap_api_forge_version,
                'loadername': "Vanilla"
    }
    into 'build/doc'
}
